# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Custard run (dev)

on:
  push:
    branches:
      - main
  workflow_run:
    workflows:
      - Custard CI # .github/workflows/custard-ci.yaml
    types:
      - in_progress
  workflow_dispatch:
    inputs:
      run-all:
        description: Run all tests
        type: boolean
        default: false
      paths:
        description: Comma separated packages to test
        type: string
      ref:
        description: Branch, tag, or commit SHA to run tests on
        type: string
        default: main
  # schedule:
  #   # https://crontab.guru/#0_12_*_*_0
  #   - cron: 0 12 * * 0 # At 12:00 on Sunday

jobs:
  affected:
    uses: GoogleCloudPlatform/cloud-samples-tools/.github/workflows/affected.yaml@v0.2.3
    permissions:
      statuses: write
    with:
      head-sha: ${{ github.event.workflow_run.head_sha || inputs.ref || github.sha }}
      config-file: .github/config/nodejs-dev.jsonc
      paths: ${{ (inputs.run-all && '.') || inputs.paths || '' }}
      create-check-if: ${{ !!github.event.workflow_run }}

  test:
    needs: affected
    runs-on: ubuntu-latest
    timeout-minutes: 120 # 2 hours hard limit
    permissions:
      statuses: write
    strategy:
      fail-fast: false
      matrix:
        path: ${{ needs.affected.outputs.paths }}
    continue-on-error: true
    env:
      GOOGLE_SAMPLES_PROJECT: long-door-651
      GOOGLE_SERVICE_ACCOUNT: kokoro-system-test@long-door-651.iam.gserviceaccount.com
    steps:
      - name: Check queued
        uses: GoogleCloudPlatform/cloud-samples-tools/actions/steps/create-check@v0.2.3
        id: queued
        with:
          sha: ${{ github.event.workflow_run.head_sha || inputs.ref || github.sha }}
          name: Custard CI / ${{ github.job }} (${{ matrix.path }})
          job-name: ${{ github.job }} (${{ matrix.path }})
          if: ${{ !!github.event.workflow_run }}
      - name: Setup Custard
        uses: GoogleCloudPlatform/cloud-samples-tools/actions/steps/setup-custard@v0.2.3
        with:
          path: ${{ matrix.path }}
          ci-setup: ${{ toJson(fromJson(needs.affected.outputs.ci-setups)[matrix.path]) }}
          project-id: ${{ env.GOOGLE_SAMPLES_PROJECT }}
          workload-identity-provider: projects/1046198160504/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
          service-account: ${{ env.GOOGLE_SERVICE_ACCOUNT }}
      - name: Check in_progress
        uses: GoogleCloudPlatform/cloud-samples-tools/actions/steps/update-check@v0.2.3
        id: in_progress
        with:
          check: ${{ steps.queued.outputs.check }}
          status: in_progress
      - name: Run tests for ${{ matrix.path }}
        run: |
          timeout ${{ fromJson(needs.affected.outputs.ci-setups)[matrix.path].timeout-minutes }}m \
            make test dir=${{ matrix.path }}
      - name: Check success
        uses: GoogleCloudPlatform/cloud-samples-tools/actions/steps/update-check@v0.2.3
        with:
          check: ${{ steps.in_progress.outputs.check }}
          status: success
      - name: Check failure
        uses: GoogleCloudPlatform/cloud-samples-tools/actions/steps/update-check@v0.2.3
        if: failure()
        with:
          check: ${{ steps.in_progress.outputs.check }}
          status: failure
      # - name: Upload test results for FlakyBot workflow
      #   if: github.event.action == 'schedule' && always() # always() submits logs even if tests fail
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: test-results
      #     path: ${{ matrix.path }}/${{ github.run_id }}_sponge_log.xml
      #     retention-days: 1

  done:
    needs: [affected, test]
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - name: Check success
        uses: GoogleCloudPlatform/cloud-samples-tools/actions/steps/update-check@v0.2.3
        with:
          check: ${{ needs.affected.outputs.check }}
          status: success
