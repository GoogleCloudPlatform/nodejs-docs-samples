name: storagetransfer
on:
  push:
    branches:
    - main
    paths:
    - 'storagetransfer/**'
    - '.github/workflows/storagetransfer.yaml'
  pull_request:
    paths:
    - 'storagetransfer/**'
    - '.github/workflows/storagetransfer.yaml'
  pull_request_target:
    types: [labeled]
    paths:
    - 'storagetransfer/**'
    - '.github/workflows/storagetransfer.yaml'
  schedule:
  - cron:  '0 0 * * 0'
jobs:
  test:
    if: ${{ github.event.action != 'labeled' || github.event.label.name == 'actions:force-run' }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: 'write'
      pull-requests: 'write'
      id-token: 'write'
    steps:
    - uses: actions/checkout@v3.1.0
      with:
        ref: ${{github.event.pull_request.head.sha}}
    - uses: 'google-github-actions/auth@v1.0.0'
      with:
        workload_identity_provider: 'projects/1046198160504/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
        service_account: 'kokoro-system-test@long-door-651.iam.gserviceaccount.com'
        create_credentials_file: 'true'
        access_token_lifetime: 600s
    - id: secrets
      uses: "google-github-actions/get-secretmanager-secrets@v1"
      with:
        secrets: |-
          sts_aws_secret:nodejs-docs-samples-tests/nodejs-docs-samples-storagetransfer-aws
          sts_azure_secret:nodejs-docs-samples-tests/nodejs-docs-samples-storagetransfer-azure
    - uses: actions/setup-node@v3.5.1
      with:
        node-version: 16
    - run: npm install
      working-directory: storagetransfer
    - run: npm test
      working-directory: storagetransfer
      env:
        AWS_ACCESS_KEY_ID : ${{ fromJSON(steps.secrets.outputs.sts_aws_secret).AccessKeyId }}
        AWS_SECRET_ACCESS_KEY: ${{ fromJSON(steps.secrets.outputs.sts_aws_secret).SecretAccessKey }}
        AZURE_STORAGE_ACCOUNT: ${{ fromJSON(steps.secrets.outputs.sts_azure_secret).StorageAccount }}
        AZURE_CONNECTION_STRING: ${{ fromJSON(steps.secrets.outputs.sts_azure_secret).ConnectionString }}
        AZURE_SAS_TOKEN: ${{ fromJSON(steps.secrets.outputs.sts_azure_secret).SAS }}
        MOCHA_REPORTER_SUITENAME: storagetransfer
        MOCHA_REPORTER_OUTPUT: storagetransfer_sponge_log.xml
        MOCHA_REPORTER: xunit
    - if: ${{ github.event.action == 'labeled' && github.event.label.name == 'actions:force-run' }}
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            await github.rest.issues.removeLabel({
              name: 'actions:force-run',
              owner: 'GoogleCloudPlatform',
              repo: 'nodejs-docs-samples',
              issue_number: context.payload.pull_request.number
            });
          } catch (e) {
            if (!e.message.includes('Label does not exist')) {
              throw e;
            }
          }
    - if: ${{ github.event_name == 'schedule' && always() }}
      run: |
        curl https://github.com/googleapis/repo-automation-bots/releases/download/flakybot-1.1.0/flakybot -o flakybot -s -L
        chmod +x ./flakybot
        ./flakybot --repo GoogleCloudPlatform/nodejs-docs-samples --commit_hash ${{github.sha}} --build_url https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
