# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test Sample

on:
  workflow_call:
    inputs:
      name:  
        required: true
        type: string
      path:  
        required: true
        type: string
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      contents: 'read'
      id-token: 'write'
    defaults:
      run:
        working-directory: ${{ inputs.path }}
    steps:
    - uses: actions/checkout@v3.5.3
      with:
        ref: ${{github.event.pull_request.head.sha}}
    - uses: 'google-github-actions/auth@v1.1.1'
      with:
        workload_identity_provider: 'projects/1046198160504/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider'
        service_account: 'kokoro-system-test@long-door-651.iam.gserviceaccount.com'
        create_credentials_file: 'true'
        access_token_lifetime: 600s
    - uses: actions/setup-node@v3.8.0
      with:
        node-version: 16
    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}        
    - uses: actions/cache@v3
      id: npm-cache
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-     
    - name: install repo dependencies
      run: npm install
      working-directory: .
    - name: install directory dependencies
      run: npm install
    - run: npm run build --if-present
    - name: set testing env vars
      run: echo "MOCHA_REPORTER_OUTPUT=${{github.run_id}}_sponge_log.xml" >> $GITHUB_ENV
    - name: set testing env vars for scheduled run
      if: github.event.action == 'schedule'
      run: |
        echo "MOCHA_REPORTER_SUITENAME=${{ inputs.name }}" >> $GITHUB_ENV
        echo "MOCHA_REPORTER=xunit" >> $GITHUB_ENV
    - run: npm test
    - name: upload test results for FlakyBot workflow
      if: github.event.action == 'schedule' && always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ${{ inputs.path }}/${{ env.MOCHA_REPORTER_OUTPUT }}
        retention-days: 1
