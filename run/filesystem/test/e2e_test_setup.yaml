steps:
- id: 'Set gcloud config values'
  name: 'gcr.io/cloud-builders/gcloud:latest'
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    gcloud config set run/region $_REGION && \
    gcloud config set filestore/zone $_ZONE || \
    echo 'Failed to set gcloud config values.' | tee -a /workspace/errors.txt

- id: 'Create Filestore instance'
  name: 'gcr.io/cloud-builders/gcloud:latest'
  entrypoint: /bin/bash
  waitFor: ['Set gcloud config values']
  args:
  - '-c'
  - |
    gcloud filestore instances create ${_INSTANCE_ID} \
    --tier=STANDARD \
    --file-share=name=${_SHARE_NAME},capacity=1TiB \
    --network=name="default" || \
    echo 'Failed to create Filestore instance.' | tee -a /workspace/errors.txt

- id: 'Create serverless VPC connector'
  name: 'gcr.io/cloud-builders/gcloud:latest'
  entrypoint: /bin/bash
  waitFor: ['Set gcloud config values']
  args:
  - '-c'
  - |
    gcloud compute networks vpc-access connectors create \
    ${_CONNECTOR_NAME} --region ${_REGION} --range "10.8.0.0/28" || \
    echo 'Failed to create serverless VPC connector.' | tee -a /workspace/errors.txt

- id: 'Retrieve Filestore IP address'
  name: 'gcr.io/cloud-builders/gcloud:latest'
  entrypoint: /bin/bash
  waitFor: ['Create Filestore instance']
  args:
  - '-c'
  - |
    gcloud filestore instances \
    describe $_INSTANCE_ID \
    --format "value(networks.ipAddresses[0])" > /workspace/FILESTORE_IP_ADDRESS || \
    echo 'Failed to retrieve Filestore IP address.' | tee -a /workspace/errors.txt

- id: 'Build and deploy to Cloud Run'
  name: 'gcr.io/cloud-builders/gcloud:latest'
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    export FILESTORE_IP_ADDRESS=$(cat /workspace/FILESTORE_IP_ADDRESS) && \
    gcloud run deploy $_RUN_SERVICE --source . \
    --vpc-connector $_CONNECTOR_NAME \
    --execution-environment gen2 \
    --allow-unauthenticated \
    --update-env-vars FILESTORE_IP_ADDRESS=$$FILESTORE_IP_ADDRESS,FILE_SHARE_NAME=$_SHARE_NAME || \
    echo 'Failed to build and deploy to Cloud Run' | tee -a /workspace/errors.txt

- id: 'Pass/Fail'
  name: 'bash'
  args:
  - '-c'
  - |
    cat /workspace/errors.txt 2> /dev/null \
    && exit 2 \
    || echo "End to end test completed successfully." 

substitutions:
  _ZONE: us-central1-a
  _REGION: us-central1
  _SHARE_NAME: share1
  _INSTANCE_ID: run-filesystem-e2e-test
  _CONNECTOR_NAME: run-filesystem-e2e-test
  _RUN_SERVICE: filesystem-app