steps:

- id: 'Build Container Image'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: '/bin/bash'
  args:
    - '-c'
    - |
      ./test/retry.sh "docker build -t gcr.io/${PROJECT_ID}/${_SERVICE}:${_VERSION} ."

- id: 'Push Container Image'
  name: 'gcr.io/cloud-builders/docker'
  entrypoint: '/bin/bash'
  args:
    - '-c'
    - |
      ./test/retry.sh "docker push gcr.io/${PROJECT_ID}/${_SERVICE}:${_VERSION}"

- id: 'Deploy to Cloud Run'
  name: 'gcr.io/cloud-builders/gcloud:latest'
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    ./test/retry.sh "gcloud run deploy ${_SERVICE} \
      --image gcr.io/${PROJECT_ID}/${_SERVICE}:${_VERSION} \
      --allow-unauthenticated \
      --region ${_REGION} \
      --platform ${_PLATFORM} \
      --add-cloudsql-instances ${_CLOUD_SQL_CONNECTION_NAME} \
      --update-env-vars CLOUD_SQL_CREDENTIALS_SECRET=projects/${PROJECT_ID}/secrets/${_SERVICE}-secrets/versions/latest"

- id: 'Create Pub/Sub topic'
  name: 'gcr.io/cloud-builders/gcloud:latest'
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    gcloud pubsub topics create ${_TOPIC} --quiet
    gcloud pubsub subscriptions create ${_TOPIC}_sub --topic ${_TOPIC} \
      --push-endpoint ${URL} \
      --push-auth-service-account cloud-run-invoker@{PROJECT}.iam.gserviceaccount.com

- id: 'Create a Bucket'
  name: 'gcr.io/cloud-builders/gcloud:latest'
  entrypoint: /bin/bash
  args:
  - '-c'
  - |
    #Create 2 buckets
    # create pubsub notification
    upload photo


images:
- gcr.io/${PROJECT_ID}/${_SERVICE}:${_VERSION}

substitutions:
  _SERVICE: image-processing
  _VERSION: manual
  _REGION: us-central1
  _PLATFORM: managed
