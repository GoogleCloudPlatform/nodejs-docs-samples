#!/usr/bin/env node

/**
 * Copyright 2017, Google, Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

const childProcess = require('child_process');
const fs = require(`fs`);
const path = require(`path`);

const PROJECT_ROOT = path.join(__dirname, `..`);

function findSamples (directory, depth) {
  // Limit recursion depth
  if (depth < 0) {
    return;
  }

  // Skip module directories
  if (directory.includes('node_modules')) {
    return;
  }

  // Get subdirectories
  const dirs = fs.readdirSync(directory);

  // Record subdirectories that contain a package.json file
  dirs
    .filter((dir) => fs.existsSync(path.join(directory, dir, `package.json`)))
    .forEach((dir) => {
      const _path = path.join(directory, dir);
      const pkg = JSON.parse(fs.readFileSync(path.join(_path, `package.json`)));
      if (pkg['cloud-repo-tools'] && pkg['cloud-repo-tools'].samples && pkg['cloud-repo-tools'].samples.length > 0) {
        const result = childProcess.spawnSync('node', ['./node_modules/@google-cloud/nodejs-repo-tools/bin/samples', 'generate', '--local-path', _path, '--build-pack', 'nodejs'], {
          cwd: PROJECT_ROOT,
          stdio: 'inherit'
        });

        if (result.error) {
          throw result.error;
        }
      }
    });

  // Recurse
  dirs
    .filter((dir) => fs.statSync(path.join(directory, dir)).isDirectory())
    .forEach((dir) => {
      findSamples(path.join(directory, dir), depth - 1);
    });
}

findSamples(PROJECT_ROOT, 3);
